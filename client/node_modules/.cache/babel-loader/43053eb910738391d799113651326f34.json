{"ast":null,"code":"import _classCallCheck from \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/src/components/Map/Map.js\";\nimport React, { Component } from 'react';\nimport './Map.css';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport userLocationURL from \"./user_location.svg\";\n\nfunction getUserLocation(position) {\n  this.setState({\n    location: {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    }\n  });\n}\n\nfunction failedGettingLocation() {\n  var _this = this;\n\n  fetch('https://ipapi.co/json').then(function (response) {\n    return response.json();\n  }).then(function (location) {\n    _this.setState({\n      location: {\n        lat: location.latitude,\n        lng: location.longitude\n      }\n    });\n  });\n}\n\nvar MapComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapComponent, _Component);\n\n  function MapComponent() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, MapComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      location: {\n        lat: 0,\n        lng: 0\n      },\n      zoom: 13,\n      locationName: \"Mi Lugar Favorito\"\n    };\n    return _this2;\n  }\n\n  _createClass(MapComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      navigator.geolocation.getCurrentPosition(getUserLocation, failedGettingLocation, {\n        enableHighAccuracy: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var position = [this.state.location.lat, this.state.location.lng];\n\n      var myIcon = function myIcon() {\n        L.icon({\n          iconUrl: userLocationURL,\n          iconSize: [50, 82],\n          popupAnchor: [0, -15]\n        });\n      };\n\n      return React.createElement(Map, {\n        className: \"Map\",\n        center: position,\n        zoom: this.state.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        position: position,\n        icon: myIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.locationName)));\n    }\n  }]);\n\n  return MapComponent;\n}(Component);\n\nexport default MapComponent;","map":{"version":3,"sources":["/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/src/components/Map/Map.js"],"names":["React","Component","Map","TileLayer","Marker","Popup","L","getUserLocation","position","setState","location","lat","coords","latitude","lng","longitude","failedGettingLocation","fetch","then","response","json","MapComponent","state","zoom","locationName","navigator","geolocation","getCurrentPosition","enableHighAccuracy","myIcon","icon","iconUrl","userLocationURL","iconSize","popupAnchor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,eAA9C;AACA,OAAOC,CAAP,MAAc,SAAd;;;AAIA,SAASC,eAAT,CAAyBC,QAAzB,EAAkC;AAChC,OAAKC,QAAL,CACE;AACEC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,GAAG,EAAEH,QAAQ,CAACI,MAAT,CAAgBC,QADb;AAERC,MAAAA,GAAG,EAAEN,QAAQ,CAACI,MAAT,CAAgBG;AAFb;AADZ,GADF;AAOD;;AAED,SAASC,qBAAT,GAAgC;AAAA;;AAC9BC,EAAAA,KAAK,CAAC,uBAAD,CAAL,CAA+BC,IAA/B,CAAoC,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAA5C,EACCF,IADD,CACM,UAAAR,QAAQ,EAAI;AAChB,IAAA,KAAI,CAACD,QAAL,CAAc;AACZC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,GAAG,EAAED,QAAQ,CAACG,QADN;AAERC,QAAAA,GAAG,EAAEJ,QAAQ,CAACK;AAFN;AADE,KAAd;AAMD,GARD;AASD;;IAGKM,Y;;;;;;;;;;;;;;;;;WACJC,K,GAAQ;AACNZ,MAAAA,QAAQ,EAAE;AACNC,QAAAA,GAAG,EAAE,CADC;AAELG,QAAAA,GAAG,EAAE;AAFA,OADJ;AAKNS,MAAAA,IAAI,EAAE,EALA;AAMNC,MAAAA,YAAY,EAAE;AANR,K;;;;;;wCASY;AAClBC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCpB,eAAzC,EAA0DS,qBAA1D,EAAiF;AAACY,QAAAA,kBAAkB,EAAE;AAArB,OAAjF;AACD;;;6BAEO;AACN,UAAMpB,QAAQ,GAAG,CAAC,KAAKc,KAAL,CAAWZ,QAAX,CAAoBC,GAArB,EAA0B,KAAKW,KAAL,CAAWZ,QAAX,CAAoBI,GAA9C,CAAjB;;AACA,UAAMe,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBvB,QAAAA,CAAC,CAACwB,IAAF,CAAO;AACLC,UAAAA,OAAO,EAAEC,eADJ;AAELC,UAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAFL;AAGLC,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL;AAHR,SAAP;AAKD,OAND;;AAQA,aACE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,MAAM,EAAE1B,QAA7B;AAAuC,QAAA,IAAI,EAAE,KAAKc,KAAL,CAAWC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,2EADd;AAEE,QAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAEf,QADZ;AAEE,QAAA,IAAI,EAAEqB,MAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,KAAL,CAAWE,YADd,CAHF,CAJF,CADF;AAcD;;;;EAtCwBvB,S;;AAyC3B,eAAeoB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Map.css';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport userLocationURL from './user_location.svg';\n\n\nfunction getUserLocation(position){\n  this.setState(\n    {\n      location: {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      }\n    });\n}\n\nfunction failedGettingLocation(){\n  fetch('https://ipapi.co/json').then(response => response.json())\n  .then(location => {\n    this.setState({\n      location: {\n        lat: location.latitude,\n        lng: location.longitude\n      },\n    });\n  })\n} \n\n\nclass MapComponent extends Component {\n  state = {\n    location: {\n        lat: 0,\n         lng: 0\n    },\n    zoom: 13,\n    locationName: \"Mi Lugar Favorito\",\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(getUserLocation, failedGettingLocation, {enableHighAccuracy: true});\n  }\n\n  render(){    \n    const position = [this.state.location.lat, this.state.location.lng]\n    const myIcon = () => {\n      L.icon({\n        iconUrl: userLocationURL,\n        iconSize: [50, 82],\n        popupAnchor: [0, -15]\n      });\n    };\n  \n    return (\n      <Map className=\"Map\" center={position} zoom={this.state.zoom}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n        <Marker \n          position={position}\n          icon={myIcon}>\n          <Popup>\n            {this.state.locationName}\n          </Popup>\n        </Marker>\n      </Map>\n    )\n  }\n}\n\nexport default MapComponent"]},"metadata":{},"sourceType":"module"}