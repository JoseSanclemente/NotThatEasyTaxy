{"ast":null,"code":"import _classCallCheck from \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/src/components/Map/Map.js\";\nimport React, { Component } from 'react';\nimport './Map.css';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport userLocationURL from \"./user_location.svg\";\nimport favLocationURL from \"./fav_location.svg\";\nvar userIcon = L.icon({\n  iconUrl: userLocationURL,\n  iconSize: [50, 82],\n  popupAnchor: [0, -15]\n});\nvar favIcon = L.icon({\n  iconUrl: favLocationURL,\n  iconSize: [50, 82],\n  popupAnchor: [0, -15]\n});\n\nvar MapComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapComponent, _Component);\n\n  function MapComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userLocation: {\n        lat: 3.4372201,\n        lng: -76.5224991\n      },\n      favLocations: [{\n        position: [0, 0],\n        name: \"Test\"\n      }],\n      zoom: 13\n    };\n\n    _this.getUserLocation = function (position) {\n      _this.setState({\n        userLocation: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          popupMessage: \"Tu posiciÃ³n actual\"\n        }\n      });\n    };\n\n    _this.failedGettingLocation = function () {\n      fetch('https://ipapi.co/json').then(function (response) {\n        return response.json();\n      }).then(function (location) {\n        _this.setState({\n          userLocation: {\n            lat: location.latitude,\n            lng: location.longitude\n          }\n        });\n      });\n    };\n\n    _this.addMarker = function (e) {\n      var currentMarkers = _this.state.favLocations;\n      var newMarker = {\n        position: e.latlng,\n        name: \"Test2\"\n      };\n      console.log(newMarker);\n\n      _this.setState({\n        favLocations: [currentMarkers, newMarker]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MapComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      navigator.geolocation.getCurrentPosition(this.getUserLocation, this.failedGettingLocation, {\n        enableHighAccuracy: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var userPosition = [this.state.userLocation.lat, this.state.userLocation.lng];\n      var userMessage = this.state.userLocation.popupMessagesposition;\n      return React.createElement(Map, {\n        className: \"Map\",\n        center: userPosition,\n        zoom: this.state.zoom,\n        onClick: this.addMarker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        position: userPosition,\n        icon: userIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, userMessage))), this.state.favLocations.map(function (fav, id) {\n        return React.createElement(Marker, {\n          key: \"marker-\".concat(id),\n          position: fav.position,\n          icon: favIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Popup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, fav.name)));\n      }));\n    }\n  }]);\n\n  return MapComponent;\n}(Component);\n\nexport default MapComponent;","map":{"version":3,"sources":["/home/jose/Documents/Coding/Javascript/NotThatEasyTaxy/client/src/components/Map/Map.js"],"names":["React","Component","Map","TileLayer","Marker","Popup","L","userIcon","icon","iconUrl","userLocationURL","iconSize","popupAnchor","favIcon","favLocationURL","MapComponent","state","userLocation","lat","lng","favLocations","position","name","zoom","getUserLocation","setState","coords","latitude","longitude","popupMessage","failedGettingLocation","fetch","then","response","json","location","addMarker","e","currentMarkers","newMarker","latlng","console","log","navigator","geolocation","getCurrentPosition","enableHighAccuracy","userPosition","userMessage","popupMessagesposition","map","fav","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Map.css';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport userLocationURL from './user_location.svg';\nimport favLocationURL from './fav_location.svg';\n\nconst userIcon = L.icon({\n  iconUrl: userLocationURL,\n  iconSize: [50, 82],\n  popupAnchor: [0, -15]\n});\n\nconst favIcon = L.icon({\n  iconUrl: favLocationURL,\n  iconSize: [50, 82],\n  popupAnchor: [0, -15]\n});\n\nclass MapComponent extends Component {\n  state = {\n    userLocation: {\n      lat: 3.4372201,\n      lng: -76.5224991\n    },\n    favLocations: [\n      { position:[0,0], name:\"Test\" }\n    ],\n    zoom: 13,\n  }\n  \n  getUserLocation = (position) => {\n    this.setState(\n      {\n        userLocation: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          popupMessage: \"Tu posiciÃ³n actual\"\n        },\n      });\n  }\n\n  failedGettingLocation = () => {\n    fetch('https://ipapi.co/json').then(response => response.json())\n    .then(location => {\n      this.setState({\n        userLocation: {\n          lat: location.latitude,\n          lng: location.longitude\n        },\n      });\n    })\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(this.getUserLocation, this.failedGettingLocation, {enableHighAccuracy: true});\n  }\n\n  addMarker = (e) => {\n    const currentMarkers = this.state.favLocations\n    var newMarker = { position: e.latlng, name: \"Test2\"}\n    console.log(newMarker);\n    this.setState({favLocations: [currentMarkers, newMarker]})\n  }\n \n  render(){    \n    const userPosition = [this.state.userLocation.lat, this.state.userLocation.lng]\n    const userMessage = this.state.userLocation.popupMessagesposition\n    return (\n      <Map className=\"Map\" center={userPosition} zoom={this.state.zoom}\n        onClick={this.addMarker}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n          \n        <Marker position={userPosition} icon={userIcon}>\n          <Popup>\n            <span>{userMessage}</span>\n          </Popup>\n        </Marker>\n\n        {this.state.favLocations.map((fav,id) => \n          <Marker key={`marker-${id}`} position={fav.position} icon={favIcon}>\n          <Popup>\n            <span>{fav.name}</span>\n          </Popup>\n          </Marker>\n        )}\n      </Map>\n    )\n  }\n}\n\nexport default MapComponent"]},"metadata":{},"sourceType":"module"}